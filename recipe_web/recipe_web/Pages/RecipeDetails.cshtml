@page "{id:int}"
@model recipe_web.Pages.RecipeDetailsModel
@using entity_classes
@{
    ViewData["Title"] = "Recipe Details";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="message_container">
    <h2>@Model.Recipe?.GetTitle()</h2>
</div>

<div class="recipe-details-container">
    <div class="recipe-content">
        <div class="recipe-description">
            <h3>Description</h3>
            <p>@Model.Recipe?.GetDescription()</p>

            <h3>Ingredients</h3>
            <ul>
                @if (Model.Recipe != null)
                {
                    foreach (var ingredient in Model.Recipe.GetIngredientRecipes())
                    {
                        <li>@ingredient.GetFormattedQuantity() @ingredient.GetUnit().GetName() @ingredient.GetIngredient().GetName()</li>
                    }
                }
            </ul>

            <h3>Instructions</h3>
            <p>@Model.Recipe?.GetInstructions()</p>

            <h3>Additional Information</h3>
            <p><strong>Diet Restriction:</strong> @Model.Recipe?.GetDietRestriction().GetName()</p>
            <p><strong>Difficulty:</strong> @Model.Recipe?.GetDifficulty().GetName()</p>
            <p><strong>Preparation Time:</strong> @Model.Recipe?.GetPreparationTime().ToString(@"hh\:mm")</p>
            <p><strong>Cooking Time:</strong> @Model.Recipe?.GetCookingTime().ToString(@"hh\:mm")</p>
            <p><strong>Total Time:</strong> @Model.Recipe?.CalculateTotalTime().ToString(@"hh\:mm")</p>

            @if (Model.Recipe is MainCourse mainCourse)
            {
                <p><strong>Servings:</strong> @mainCourse.GetServings()</p>
                <p><strong>Spicy:</strong> @(mainCourse.GetIsSpicy() ? "Yes" : "No")</p>
            }
            else if (Model.Recipe is Drink drink)
            {
                <p><strong>Alcoholic:</strong> @(drink.GetIsAlcoholic() ? "Yes" : "No")</p>
                <p><strong>Contains Caffeine:</strong> @(drink.GetContainsCaffeine() ? "Yes" : "No")</p>
                <p><strong>Served Hot:</strong> @(drink.GetServedHot() ? "Yes" : "No")</p>
                <p><strong>Pours:</strong> @drink.GetPours()</p>
            }
            else if (Model.Recipe is Dessert dessert)
            {
                <p><strong>Sugar-Free:</strong> @(dessert.GetIsSugarFree() ? "Yes" : "No")</p>
                <p><strong>Requires Freezing:</strong> @(dessert.GetRequiresFreezing() ? "Yes" : "No")</p>
            }

            <p><strong>Uploaded By:</strong> @Model.Recipe?.GetUser().GetUsername()</p>

            <form method="post" asp-page-handler="AddToDoList" asp-route-id="@Model.Recipe?.GetIdRecipe()">
                @if (!Model.IsInToDoList)
                {
                    <button type="submit" class="btn btn-primary add-to-do-button">Add to To-Do List</button>
                }
                else
                {
                    <span class="to-do-message">This recipe is already in your To-Do list!</span>
                }
            </form>
        </div>
    </div>
    @if (Model.Recipe?.GetRecipePic() != null)
    {
        <div class="recipe-pic-container">
            <img src="data:@Model.Recipe.GetRecipePic().GetContentType();base64,@Convert.ToBase64String(Convert.FromBase64String(@Model.Recipe.GetRecipePic().GetData()))" alt="@Model.Recipe.GetTitle() Picture" class="recipe-pic" />
        </div>
    }
    <div class="reviews-section">
        <h3>Reviews</h3>
        <ul>
            @foreach (var review in Model.Reviews)
            {
                <li>
                    <p><strong>@review.GetUser().GetUsername()</strong> (@review.GetRatingValue()): @review.GetReviewText()</p>
                    @if (review.GetUser().GetIdUser() == Model.GetUserId())
                    {
                        <form method="post" asp-page-handler="EditReview" asp-route-reviewId="@review.GetIdReview()" asp-route-id="@Model.Recipe?.GetIdRecipe()">
                            <button type="submit" class="btn btn-secondary">Edit</button>
                        </form>
                        <form method="post" asp-page-handler="DeleteReview" asp-route-reviewId="@review.GetIdReview()" asp-route-id="@Model.Recipe?.GetIdRecipe()">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    }
                </li>
            }
        </ul>
        <form method="post" asp-route-id="@Model.Recipe?.GetIdRecipe()">
            <div class="form-group">
                <label for="RatingValue">Rating</label>
                <input type="number" asp-for="NewReview.RatingValue" min="1" max="5" class="form-control" />
                <span asp-validation-for="NewReview.RatingValue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="ReviewText">Review</label>
                <textarea asp-for="NewReview.ReviewText" class="form-control"></textarea>
                <span asp-validation-for="NewReview.ReviewText" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Submit Review</button>
        </form>
    </div>
</div>

@section Styles {
    <style>
        .recipe-details-container {
            background-color: #F1F1F1;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 25px;
            width: 80%;
            max-width: 800px;
            margin: 20px auto;
        }

        .recipe-content {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .recipe-pic-container {
            width: 100%;
            text-align: center;
            margin-top: 10px;
            padding: 15px;
        }

        .recipe-pic {
            width: 100%;
            height: auto;
            max-height: calc(100vw * 2 / 3);
            object-fit: cover;
            aspect-ratio: 3 / 2;
            border-radius: 10px;
        }

        .recipe-description {
            width: 100%;
            padding: 0 20px;
        }

            .recipe-description p {
                color: #666;
                font-size: 17px;
            }

            .recipe-description h3 {
                color: #2C3B70;
                font-size: 25px;
                padding: 10px;
            }

            .recipe-description ul {
                list-style: none;
                padding: 0;
            }

            .recipe-description li {
                color: #666;
                font-size: 17px;
            }

        .add-to-do-button {
            display: inline-block;
            background-color: #3D538F;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            font-size: 16px;
            text-align: center;
            margin-top: 10px;
        }

            .add-to-do-button:hover {
                background-color: #2C3B70;
            }

        .to-do-message {
            display: inline-block;
            background-color: #BEC9E8;
            color: #3D538F;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 16px;
            text-align: center;
            margin-top: 10px;
        }

        .reviews-section {
            margin-top: 20px;
        }

            .reviews-section h3 {
                color: #2C3B70;
                font-size: 25px;
                padding: 10px;
            }

            .reviews-section ul {
                list-style: none;
                padding: 0;
            }

            .reviews-section li {
                color: #666;
                font-size: 17px;
                padding: 10px 0;
                border-bottom: 1px solid #ddd;
            }

            .reviews-section .form-group {
                margin-bottom: 15px;
            }

                .reviews-section .form-group label {
                    display: block;
                    color: #666;
                    font-size: 17px;
                }

                .reviews-section .form-group input,
                .reviews-section .form-group textarea {
                    width: 100%;
                    padding: 10px;
                    font-size: 17px;
                    border-radius: 5px;
                    border: 1px solid #ccc;
                    box-sizing: border-box;
                }

                .reviews-section .form-group textarea {
                    height: 100px;
                }

            .reviews-section button {
                display: inline-block;
                background-color: #3D538F;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                text-decoration: none;
                font-size: 16px;
                text-align: center;
                margin: 5px;
            }

                .reviews-section button:hover {
                    background-color: #2C3B70;
                }

            .reviews-section .text-danger {
                color: #ff0000;
                font-size: 14px;
            }
    </style>
}
