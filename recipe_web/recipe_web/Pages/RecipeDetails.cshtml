@page "{id:int}"
@model recipe_web.Pages.RecipeDetailsModel
@using entity_classes
@{
    ViewData["Title"] = "Recipe Details";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="message_container">
    <h2>@Model.Recipe.GetTitle()</h2>
</div>

<div class="recipe-details-container">
    @if (Model.Recipe.GetRecipePic() != null)
    {
        <div class="recipe-pic-container">
            <img src="data:@Model.Recipe.GetRecipePic().GetContentType();base64,@Convert.ToBase64String(Convert.FromBase64String(@Model.Recipe.GetRecipePic().GetData()))" alt="@Model.Recipe.GetTitle() Picture" class="recipe-pic" />
        </div>
    }
    <div class="recipe-content">
        <div class="recipe-description">
            <p>@Model.Recipe.GetDescription()</p>

            <h3>Ingredients</h3>
            <ul>
                @foreach (var ingredient in Model.Recipe.GetIngredientRecipes())
                {
                    <li>@ingredient.GetFormattedQuantity() @ingredient.GetUnit().GetName() @ingredient.GetIngredient().GetName()</li>
                }
            </ul>

            <h3>Instructions</h3>
            <p>@Model.Recipe.GetInstructions()</p>

            <h3>Additional Information</h3>
            <p><strong>Diet Restriction:</strong> @Model.Recipe.GetDietRestriction().GetName()</p>
            <p><strong>Difficulty:</strong> @Model.Recipe.GetDifficulty().GetName()</p>
            <p><strong>Preparation Time:</strong> @Model.Recipe.GetPreparationTime().ToString(@"hh\:mm")</p>
            <p><strong>Cooking Time:</strong> @Model.Recipe.GetCookingTime().ToString(@"hh\:mm")</p>

            @if (Model.Recipe is MainCourse mainCourse)
            {
                <p><strong>Servings:</strong> @mainCourse.GetServings()</p>
                <p><strong>Spicy:</strong> @(mainCourse.GetIsSpicy() ? "Yes" : "No")</p>
            }
            else if (Model.Recipe is Drink drink)
            {
                <p><strong>Alcoholic:</strong> @(drink.GetIsAlcoholic() ? "Yes" : "No")</p>
                <p><strong>Contains Caffeine:</strong> @(drink.GetContainsCaffeine() ? "Yes" : "No")</p>
                <p><strong>Served Hot:</strong> @(drink.GetServedHot() ? "Yes" : "No")</p>
                <p><strong>Pours:</strong> @drink.GetPours()</p>
            }
            else if (Model.Recipe is Dessert dessert)
            {
                <p><strong>Sugar-Free:</strong> @(dessert.GetIsSugarFree() ? "Yes" : "No")</p>
                <p><strong>Requires Freezing:</strong> @(dessert.GetRequiresFreezing() ? "Yes" : "No")</p>
            }

            <p><strong>Uploaded By:</strong> @Model.Recipe.GetUser().GetUsername()</p>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .recipe-details-container {
            background-color: #F1F1F1;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 80%;
            max-width: 800px;
            margin: 20px auto;
        }

            .recipe-details-container h2 {
                color: #333;
            }

        .recipe-content {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .recipe-pic-container {
            width: 100%;
            text-align: center;
            margin-bottom: 20px;
        }

        .recipe-pic {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
        }

        .recipe-description {
            width: 100%;
            padding: 0 20px;
        }

            .recipe-description p {
                color: #666;
                font-size: 17px;
            }

            .recipe-description h3 {
                color: #333;
                font-size: 25px;
            }

            .recipe-description ul {
                list-style: none;
                padding: 0;
            }

            .recipe-description li {
                color: #666;
                font-size: 17px;
            }
    </style>
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            alert(errorMessage);
        }
    });
</script>