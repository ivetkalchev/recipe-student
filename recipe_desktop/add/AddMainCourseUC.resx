<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABKFJREFUaEPtmb+LVFcUx8OSSiQsssiyhCCyhZUsEmQRK8uQellSWEiwCClS+A+k
        kq0khFQiIUWwEouQIkUIFqkWCYuk2EosFhEJYQkSRDKbz+fuecOdmTeZO2/ubKbwC1/umZnz69537nn3
        vXmnFEdHR3K51+tdYtxmvMP4C9yHB0Flv/sKfgLVXYbh5X8CCZyBWyR9j/Ep4z+Mk6DOM3S/ZXQyK+Hu
        ZEFgV/En+LIw8WFo8xL+DDdheJ4zCPQ+vA0P4QCYSEhlcoa/4B1+Oxdh5gOCmPwDAv1t1BwlCedyC17D
        H+B8JoFjk79PEl3KpRT6fgDrTgKHaeUN4Cq2EbyCT+B30G60wbjGuMZ4EW7Be3zeg5ZMY5eQyU6i7pXA
        2W0CpLJpC8pom/wCXoDvhtkI+G0JrsPP4e+wFfiznGy5YTkDcGK3GdmwgTcE+5HxChyb+DDQdSKX4UPs
        3zC2LYxX6WqYdAMO7PO2yj50HjSwq7Qc6lMD29NwR1+RdEImP4KroT4dMJTWrb26j8y5K985+Qb4cBIP
        4UhzINYfDNfhUqiXAyOPB266Nsf78EqozgxcfghtAAn4Dik1je8Zp79bY3gJPj32c+w0aLdxwxbX/CTg
        awm/nzGmvdbECjyHl0O1HBhtw7T6mTPhSl0ItWrA53n4OI8VsjncCLVyYOypsg32+Wqr3wCfdqZvDNCC
        u6FWDow8/vbhasSKbIdKdeD7o6FYzbgbKuXAyI2qcd+ZQN4IlerA/fpQrJCODkKlHBod245gLVSqA9/v
        HYcYBBM5DJVyYDcwAVcjOPcJNLEyudMEWksIXAyV6sD3+TxWJncqoYFNnGErVKoD32kTD4OJPA6VcmDn
        OacPVyNWxOff6W/tE6BPmGJmsfoxQ60cGPnA3XYj24ProVYNxPgA7uaxMvlmqJUDI4/Rz5L5IDzmep6v
        dhVI1KPEp/hse85+wbAZquXA8Az01cfIYQ74MDL9+WQM8OXT2286zkF8h/tw+sMcRk0Z+dqE4RiZ7BH4
        dKh3Bj5O4dMk0+Nqg5D/hDdgt6uN4Qr0vU2eeAKffaDZgZ0nge0p+CV83ZK8+BXOdt/BwSYO00N4gyZA
        TMIr4Xm+eJWws+NsMLryPv+OgN88tl8Lk+7AifRkmgJlyTeye+QJsud5j8RjJ+Jv6Nlt3LDWfFvZNPA5
        oNvj5DBwfA5nvupo29AN7CCe5z0Sfwx9++DRQDoxb1Jfw13Yf3Bp0CI7Oe85ZyON2YAjJ9F/N9RgFrkA
        LpglWue+g6N0JUgibbommXEJVpKbfVb1SnjLH9jYXdAkyfgKWvMjd/6Qq5eTvAof4dhXH+MCJ7TJMdrn
        bZXX4CrfmeS4fVa3nATOVuF1AvvqI61gW7JiSPZ4YAv1JtXv88hn+c0kx73oqltOAmf2dG94vio0obvQ
        TnNA4EMZsh3KFb7J6B8a2oy0XL6ze5nkyZTTPGBykeTJlVNtkNzJl1NtkNzbcloIkNzbcloImFwkOamc
        5vt37SwguZJy2gn1xQQJTiqn/VBdXJDkf5XTXqgtNki0rZw82d4KlcUHCXu89+WC/1X70u1Wr9db+Rdm
        uB2cpcH4AwAAAABJRU5ErkJggg==
</value>
  </data>
</root>